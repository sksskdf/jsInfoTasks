/*
이벤트 루프 알고리즘을 요약하면 다음과 같습니다(자세한 사항은 명세서에서 확인할 수 있습니다).

매크로태스크 큐에서 가장 오래된 태스크를 꺼내 실행합니다(예: 스크립트를 실행).
모든 마이크로태스크를 실행합니다.
이 작업은 마이크로태스크 큐가 빌 때까지 이어지고
태스크는 오래된 순서대로 처리됩니다.
렌더링할 것이 있으면 처리합니다.
매크로태스크 큐가 비어있으면 새로운 매크로태스크가 나타날 때까지 기다립니다.
1번으로 돌아갑니다.
새로운 매크로태스크를 스케줄링하는 방법은 다음과 같습니다.

지연시간이 0인 setTimeout(f) 사용하기
이 방법을 사용하면 계산이 복잡한 큰 태스크 하나를 여러 개로 쪼갤 수 있습니다. 태스크를 여러 개로 쪼개면 태스크 중간중간 사용자 이벤트에 반응할 수 있고, 작업 진척 상태를 화면에 표시해줄 수도 있습니다.

지연시간이 0인 setTimeout은 이벤트가 완전히 처리되고 난 후(버블링이 끝난 후)에 특정 작업을 수행하도록 스케줄링할 때도 사용됩니다.

새로운 마이크로태스크를 스케줄링하는 방법은 다음과 같습니다.

queueMicrotask(f) 사용하기
이외에도 프라미스 핸들러는 마이크로태스크 큐에 들어가 처리됩니다.
마이크로태스크 전체가 처리되는 동안에는 UI 변화나 네트워크 이벤트 핸들링이 일어나지 않습니다. 렌더링이나 네트워크 요청 등의 작업들은 마이크로태스크 전부가 처리되고 난 직후 처리됩니다.

이런 처리 순서 덕분에 queueMicrotask를 사용해 함수를 비동기적으로 처리할 때 애플리케이션 상태의 일관성이 보장됩니다.
*/